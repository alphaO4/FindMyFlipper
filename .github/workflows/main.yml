name: Build

on:
  push:
    branches: [ofw]
  pull_request:
    branches: [ofw]

jobs:
  ufbt-build-action:
    runs-on: ubuntu-latest
    name: "ufbt: Build for dev channel"

    strategy:
      matrix:
        include:
          - name: dev channel
            sdk-channel: dev

    steps:
      - uses: actions/checkout@v4
        with:
          ref: ofw
          sparse-checkout: findmy

      - name: Build with ufbt
        uses: flipperdevices/flipperzero-ufbt-action@v0.1.2
        id: build-app
        with:
          # Set to 'release' to build for latest published release version
          sdk-channel: ${{ matrix.sdk-channel }}
          app-dir: findmy
      
      - name: Get commit message
        run: echo "COMMIT_MESSAGE=$(git log --format=%B -n 1 ${{ github.event.after }})" >> $GITHUB_ENV
      


      - name: Create tag
        uses: actions/github-script@v5
        id: create_tag
        with:
          script: |
            github.rest.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: 'refs/tags/DevRelease',
              sha: context.sha
            })
      
      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          name: Dev Release ${{ env.COMMIT_MESSAGE }}
          token: ${{ secrets.RELEASE_TOKEN }}
          files: ${{ steps.build-app.outputs.fap-artifacts }}
          generate_release_notes: true
          tag_name: ${{steps.create_tag.outputs}}